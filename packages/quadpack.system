;;; -*- Mode: lisp -*-
;;;
;;; This is a simple defsystem for converting QUADPACK Fortran
;;; routines to Lisp and compiling the result.
;;;
;;; $Id$
;;; $Log$
;;; Revision 1.1  2000/07/20 15:42:18  rtoy
;;; Initial revision
;;;
;;;

;;; Change this as appropriate.

(push '("**;fortran;*.*.*" "home:apps/clocc/**/Fortran/*.*")
      (logical-pathname-translations "clocc"))


;; Defsystem for d1mach and i1mach
(mk:defsystem mach-par
    :source-pathname (logical-pathname "clocc:src;f2cl;packages;")
    :components
    ((:file "d1mach")
     (:file "i1mach")))


;; Convert a Fortran file to Lisp and compile the Lisp file.
(defun f2cl-compile (filename &key output-file error-file)
  (compile-file (f2cl filename) :output-file output-file :error-file error-file))

(defun f2cl-compile-no-slice (filename &key output-file error-file)
  (compile-file (f2cl filename :array-slicing nil :array-type 'array)
		:output-file output-file :error-file error-file))

(mk:define-language :f2cl
    :compiler #'f2cl-compile
    :source-extension "f")

(mk:define-language :f2cl-no-slice
    :compiler #'f2cl-compile-no-slice
    :source-extension "f")
    

;; Defsystem for quadpack.
(mk:defsystem quadpack
    :source-pathname (logical-pathname "clocc:src;f2cl;packages;quadpack;")
    :depends-on ("mach-par")
    :components
    ((:module Fortran
	      :source-pathname "Fortran;"
	      :binary-pathname "lib;"
	      :source-extension "f"
	      :language :f2cl
	      :components
	      (
	       ;; Support
	       (:file "dqwgtf")
	       (:file "dqcheb")
	       (:file "dqk15w")
	       (:file "dqwgts")
	       (:file "dqwgtc")
	       (:file "dgtsl")
	       (:file "xerror")
	       
	       ;; Core integration routines
	       (:file "dqk15")
	       (:file "dqk31")
	       (:file "dqk41")
	       (:file "dqk51")
	       (:file "dqk61")
	       (:file "dqk21")
	       (:file "dqk15i")
	       (:file "dqelg")
	       (:file "dqpsrt")
	       (:file "dqc25s"
		      :depends-on ("dqcheb" "dqk15w"))
	       (:file "dqmomo")
	       (:file "dqc25c"
		      :depends-on ("dqcheb"
				   "dqk15w"))
	       (:file "dqc25f"
		      :depends-on ("dgtsl"
				   "dqcheb"
				   "dqk15w"
				   "dqwgtf"))
	       ;; Basic integrators
	       (:file "dqage"
		      :depends-on ("dqk15"
				   "dqk31"
				   "dqk41"
				   "dqk51"
				   "dqk61"
				   "dqk21"
				   "dqpsrt"))
	       (:file "dqagie"
		      :depends-on ("dqelg"
				   "dqk15i"
				   "dqpsrt"))
	       (:file "dqagpe"
		      :depends-on ("dqelg"
				   "dqpsrt"
				   "dqk21"
				   ))
	       (:file "dqagse"
		      :depends-on ("dqk21"
				   "dqelg"
				   "dqpsrt"))
	       (:file "dqawfe"
		      :language :f2cl-no-slice
		      :depends-on ("dqagie"
				   "dqawoe"
				   "dqelg"))
	       (:file "dqawoe"
		      :depends-on ("dqc25f"
				   "dqpsrt"
				   "dqelg"))
	       (:file "dqawse"
		      :depends-on ("dqc25s"
				   "dqmomo"
				   "dqpsrt"))
	       (:file "dqawce"
		      :depends-on ("dqc25c"
				   "dqpsrt"))
	       ;; Simplified interface routines
	       (:file "dqng"
		      :depends-on ("xerror"))
	       (:file "dqag"
		      :depends-on ("dqage"
				   "xerror"))
	       (:file "dqags"
		      :depends-on ("dqagse"
				   "xerror"))
	       (:file "dqagi"
		      :depends-on ("dqagie"
				   "xerror"))
	       (:file "dqawf"
		      :depends-on ("dqawfe"
				   "xerror"))
	       (:file "dqawo"
		      :depends-on ("dqawoe"
				   "xerror"))
	       (:file "dqaws"
		      :depends-on ("dqawse"
				   "xerror"))
	       (:file "dqawc"
		      :depends-on ("dqawce"
				   "xerror"))))))
